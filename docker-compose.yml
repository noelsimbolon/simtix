services:

  simtix-client:
    build:
      context: ./simtix-client
      dockerfile: Dockerfile
    depends_on:
      simtix-client-db:
        condition: service_healthy
    networks:
      - simtix-microservices

  simtix-client-db:
    extends:
      file: simtix-client/docker-compose.yml
      service: simtix-client-db
    env_file: .env
#  simtix-ticketing:
#    build:
#      context: ./simtix-ticketing
#      dockerfile: Dockerfile
#    networks:
#      - simtix-microservices

#  simtix-ticketing-db:
#    container_name: simtix-ticketing-db
#    hostname: simtix-ticketing-db
#    image: postgres:16.1-alpine
#    ports:
#      - "8002:5432"
#    env_file:
#      - simtix-ticketing/.env
#    networks:
#      - simtix-microservices
#
#  simtix-ticketing-cache:
#    image: redis:7.2.3-alpine
#    ports:
#      - "6380:6379"
#    networks:
#      - simtix-microservices

#  simtix-ticketing-seat-queue:
#    image: redis:7.2.3-alpine
#    ports:
#      - "8004:6379"
#    networks:
#      - simtix-microservices

#  simtix-ticketing-task-queue:
#    image: rabbitmq:3.12.9-management-alpine
#    ports:
#      - '5672:5672'
#      - '15672:15672'
#    healthcheck:
#      test: [ "CMD", "rabbitmq-diagnostics", "check_running" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#    networks:
#      - simtix-microservices

#  simtix-payment:
#    build:
#      context: ./simtix-payment
#      dockerfile: Dockerfile
#    networks:
#      - simtix-microservices

#  simtix-payment-db:
#    container_name: simtix-payment-db
#    hostname: simtix-payment-db
#    image: postgres:16.1-alpine
#    ports:
#      - "8002:5432"
#    env_file:
#      - simtix-payment/.env
#    networks:
#      - simtix-microservices


networks:
  simtix-microservices:

volumes:
  simtix_client_db: